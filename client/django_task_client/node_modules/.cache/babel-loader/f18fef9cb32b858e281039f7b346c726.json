{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      selectedDate: '',\n      tasks: []\n    };\n  },\n\n  methods: {\n    convertTime(seconds) {\n      try {\n        let time = new Date(seconds * 1000).toISOString().substr(11, 8);\n        console.log(typeof time);\n        return time;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async selectDate() {\n      this.getData();\n    },\n\n    async getData() {\n      try {\n        const response = await axios.get(`http://${location.hostname}:8000/api/taskss/?format=json&created_at=${this.selectedDate}`);\n        this.tasks = response.data;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n  },\n\n  created() {\n    this.getData();\n  }\n\n};","map":{"version":3,"mappings":"AAgBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAgB;AACZC,MAAI,GAAE;AACF,WAAM;AACFC,kBAAW,EAAI,EADb;AAEFC,WAAI,EAAI;AAFN,KAAN;AAIH,GANW;;AAQZC,SAAO,EAAC;AAEJC,eAAW,CAACC,OAAD,EAAS;AACtB,UAAG;AACD,YAAIC,IAAG,GAAI,IAAIC,IAAJ,CAASF,OAAM,GAAI,IAAnB,EAAyBG,WAAzB,GAAuCC,MAAvC,CAA8C,EAA9C,EAAkD,CAAlD,CAAX;AACAC,eAAO,CAACC,GAAR,CAAY,OAAOL,IAAnB;AACA,eAAOA,IAAP;AACF,OAJA,CAKA,OAAMM,KAAN,EAAa;AACXF,eAAO,CAACC,GAAR,CAAYC,KAAZ;AACF;AACD,KAXO;;AAYJ,UAAMC,UAAN,GAAkB;AACd,WAAKC,OAAL;AACH,KAdG;;AAgBJ,UAAMA,OAAN,GAAe;AACX,UAAI;AACA,cAAMC,QAAO,GAAI,MAAMhB,KAAK,CAACiB,GAAN,CACtB,UAASC,QAAQ,CAACC,QAAS,4CAA2C,KAAKjB,YAAa,EADlE,CAAvB;AAGA,aAAKC,KAAL,GAAaa,QAAQ,CAACf,IAAtB;AACJ,OALA,CAMA,OAAOY,KAAP,EAAc;AACTF,eAAO,CAACC,GAAR,CAAYC,KAAZ;AACX;AACE;;AA1BI,GARI;;AAsCZO,SAAO,GAAG;AACN,SAAKL,OAAL;AACH;;AAxCW,CAAhB","names":["axios","data","selectedDate","tasks","methods","convertTime","seconds","time","Date","toISOString","substr","console","log","error","selectDate","getData","response","get","location","hostname","created"],"sourceRoot":"","sources":["/home/andrei/djangoWorkspace/APITest/client/django_task_client/src/components/SearchTask.vue"],"sourcesContent":["<template>\n    <div class=\"wrapper\">\n        <form v-on:submit.prevent=\"selectDate\">\n            <input class=\"date_input\" type=\"Date\" v-model=\"selectedDate\">\n            <b-button pill variant=\"dark\" type=\"submit\">Select</b-button>\n        </form>\n        <div class=\"task\" v-for=\"task in tasks\" :key=\"task.id\">\n            <h1>{{task.title}}</h1>\n            <p>{{task.description}}</p>\n            <p>{{task.created_at}}</p>\n            <p>{{convertTime(task.timer)}}</p>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default ({\n    data(){\n        return{\n            selectedDate : '',\n            tasks : [],\n        }\n    },\n\n    methods:{\n        \n        convertTime(seconds){\n      try{\n        let time = new Date(seconds * 1000).toISOString().substr(11, 8);\n        console.log(typeof(time));\n        return time;\n      }\n      catch(error) {\n        console.log(error);\n      }\n    },\n        async selectDate(){\n            this.getData();\n        },\n\n        async getData(){\n            try {\n                const response = await axios.get(\n                `http://${location.hostname}:8000/api/taskss/?format=json&created_at=${this.selectedDate}`\n                );\n                this.tasks = response.data;\n            }\n            catch (error) {\n                 console.log(error);\n      }\n        }\n\n    },\n\n    created() {\n        this.getData();\n    },\n})\n</script>\n\n<style scoped>\nform{\n    background-color: rgba(116, 255, 243, 0.623);\n    border-radius: 5px;\n    width: 300px;\n    height: 50px;\n    padding: 5px;\n    position: relative;\n    left: 50%;\n    transform: translate(-50%);\n}\n.date_input{\n    background-color: rgb(39, 39, 39);\n    color: white;\n    border: none;\n    border-radius: 20px;\n    height: 35px;\n}\n.task{\n  position: relative;\n  list-style: none;\n  width: 250px;\n  height: 200px;\n  border-radius: 25px;\n  padding: 10px;\n  padding-bottom: 20px;\n  background-color: rgba(116, 255, 243, 0.623); \n  margin-left: 20px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}