{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"task_container\"\n};\nconst _hoisted_2 = {\n  class: \"task_content\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Tasks\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  class: \"tasks_list\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, task => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: task.id\n    }, [_createElementVNode(\"h2\", null, _toDisplayString(task.title), 1\n    /* TEXT */\n    ), _createElementVNode(\"p\", null, _toDisplayString(task.description), 1\n    /* TEXT */\n    ), _createElementVNode(\"button\", {\n      onClick: $event => $options.toggleTask(task)\n    }, _toDisplayString(task.completed ? 'Undo' : 'Complete'), 9\n    /* TEXT, PROPS */\n    , _hoisted_5), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.deteleTask(task)\n    }, \"Delete\", 8\n    /* PROPS */\n    , _hoisted_6)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])]);\n}","map":{"version":3,"mappings":";;AACMA,OAAK,EAAC;;;AACLA,OAAK,EAAC;;;gCACVC,oBAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,EAAS;AAAA;AAAT;;;AACID,OAAK,EAAC;;;;;uBAHZE,oBAYM,KAZN,cAYM,CAXLD,oBAUM,KAVN,cAUM,CATLE,UASK,EARLF,oBAOK,IAPL,cAOK,oBANJC,oBAKKE,SALL,EAKK,IALL,EAKKC,YALcC,WAKd,EALMC,IAAa,IAAT;yBAAfL,oBAKK,IALL,EAKK;AALsBM,SAAG,EAAED,IAAI,CAACE;AAKhC,KALL,GACCR,oBAAyB,IAAzB,EAAyB,IAAzB,EAAyBS,iBAAlBH,IAAI,CAACI,KAAa,CAAzB,EAAiB;AAAA;AAAjB,OACAV,oBAA8B,GAA9B,EAA8B,IAA9B,EAA8BS,iBAAxBH,IAAI,CAACK,WAAmB,CAA9B,EAAsB;AAAA;AAAtB,OACAX,oBAAsF,QAAtF,EAAsF;AAA7EY,aAAK,YAAEC,oBAAWP,IAAX;AAAsE,KAAtF,mBAAqCA,IAAI,CAACQ,SAAL,GAAc,MAAd,GAAc,WAAnD,EAAmD;AAAA;AAAnD,MAAmDC,UAAnD,GACAf,oBAAiD,QAAjD,EAAiD;AAAxCY,aAAK,YAAEI,gBAAWV,IAAX;AAAiC,KAAjD,EAAkC,QAAlC,EAAwC;AAAA;AAAxC,MAAwCW,UAAxC,EAJD;GAKK,CALL;;AAAA,GAMI,EAPL,CAQK,CAVN,CAWK,CAZN","names":["class","_createElementVNode","_createElementBlock","_hoisted_3","_Fragment","_renderList","$data","task","key","id","_toDisplayString","title","description","onClick","$options","completed","_hoisted_5","_ctx","_hoisted_6"],"sourceRoot":"","sources":["/home/andrei/djangoWorkspace/APITest/client/django_task_client/src/components/MyTasks.vue"],"sourcesContent":["<template>\n\t<div class=\"task_container\">\n\t\t<div class=\"task_content\">\n\t\t\t<h1>Tasks</h1>\n\t\t\t<ul class=\"tasks_list\">\n\t\t\t\t<li v-for=\"task in tasks\" :key=\"task.id\">\n\t\t\t\t\t<h2>{{ task.title }}</h2>\n\t\t\t\t\t<p>{{ task.description }} </p>\n\t\t\t\t\t<button @click=\"toggleTask(task)\">{{ task.completed ? 'Undo' : 'Complete' }} </button>\n\t\t\t\t\t<button @click=\"deteleTask(task)\">Delete</button>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\ttasks: ['']\n\t\t}\n\t},\n\nmethods: {\n\tasync getData() {\n\t\ttry{\n\t\t\tconst response = await axios.get('http://localhost:8000/api/taskss/?format=json');\n\t\t\tthis.tasks = response.data;\n\t\t}\n\t\tcatch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t},\n\n\tasync toggleTask(task){\n\t\ttry{\n\t\t\tconst response = await axios.put(`http://localhost:8000/api/taskss/${task}/?format=json`, {\n\t\t\t\tcompleted: !task.completed,\n\t\t\t\ttitle: task.title,\n\t\t\t\tdescription: task.description\n\t\t\t});\n\n\t\t\tlet taskIndex = this.tasks.findIndex(t => t.id === task.id);\n\n\t\t\tthis.tasks = this.tasks.map((task) => {\n\t\t\t\tif(this.tasks.findIndex(t => t.id === task.id) === taskIndex){\n\t\t\t\treturn response.data;\n\t\t\t\t}\n\t\t\t\treturn task;\n\t\t\t});\n\t\t}\n\t\tcatch(error){\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n},\n\ncreated() {\n\tthis.getData();\n}\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}