{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-158c2b7c\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"task_container\"\n};\nconst _hoisted_2 = {\n  class: \"add_task\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\"\n}, \"Title\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"description\"\n}, \"Description\", -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"Add Task\");\n\nconst _hoisted_9 = {\n  class: \"task_content\"\n};\nconst _hoisted_10 = {\n  class: \"tasks_list\"\n};\nconst _hoisted_11 = {\n  key: 0\n};\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = [\"onClick\"];\nconst _hoisted_15 = [\"onClick\"];\nconst _hoisted_16 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_button = _resolveComponent(\"b-button\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.title = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.title]])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"textarea\", {\n    class: \"form-control\",\n    id: \"description\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.description = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.description]])]), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_b_button, {\n    variant: \"succes\",\n    type: \"submit\"\n  }, {\n    default: _withCtx(() => [_hoisted_8]),\n    _: 1\n    /* STABLE */\n\n  })])], 32\n  /* HYDRATE_EVENTS */\n  )]), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.stages, stage => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: stage\n    }, [_createElementVNode(\"div\", _hoisted_10, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, task => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: task.id\n      }, [task.stage == stage ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: _normalizeClass(stage)\n      }, [_createElementVNode(\"h2\", null, _toDisplayString(task.title), 1\n      /* TEXT */\n      ), _createElementVNode(\"p\", null, _toDisplayString(task.description), 1\n      /* TEXT */\n      ), task.timerState ? (_openBlock(), _createElementBlock(\"p\", _hoisted_11, \"Now:\" + _toDisplayString($data.localTimer), 1\n      /* TEXT */\n      )) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", null, \"Total:\" + _toDisplayString(task.timer), 1\n      /* TEXT */\n      ), task.stage == 'Doing' ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 1,\n        onClick: $event => $options.toggleTimer(task)\n      }, _toDisplayString($data.count ? \"Stop\" : \"Start\"), 9\n      /* TEXT, PROPS */\n      , _hoisted_12)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n        onClick: $event => $options.toggleStage(task, 'ToDo')\n      }, \" To Do \", 8\n      /* PROPS */\n      , _hoisted_13), _createElementVNode(\"button\", {\n        onClick: $event => $options.toggleStage(task, 'Doing')\n      }, \" Doing \", 8\n      /* PROPS */\n      , _hoisted_14), _createElementVNode(\"button\", {\n        onClick: $event => $options.toggleStage(task, 'Done')\n      }, \" Done \", 8\n      /* PROPS */\n      , _hoisted_15), _createElementVNode(\"button\", {\n        onClick: $event => $options.deleteTask(task)\n      }, \"Delete\", 8\n      /* PROPS */\n      , _hoisted_16)], 2\n      /* CLASS */\n      )) : _createCommentVNode(\"v-if\", true)]);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","for","_createElementBlock","onSubmit","$options","_hoisted_4","type","id","$data","$event","_hoisted_6","_createVNode","_component_b_button","variant","_Fragment","_renderList","stage","key","task","_toDisplayString","title","description","timerState","_hoisted_11","timer","onClick","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16"],"sourceRoot":"","sources":["/home/andrei/djangoWorkspace/APITest/client/django_task_client/src/components/MyTasks.vue"],"sourcesContent":["<template>\n  <div class=\"task_container\">\n    <div class=\"add_task\">\n      <form v-on:submit.prevent=\"submitForm\">\n        <div class=\"form-group\">\n          <label for=\"title\" >Title</label>\n          <input type=\"text\" class=\"form-control\" id=\"title\" v-model=\"title\" />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"description\">Description</label>\n          <textarea\n            class=\"form-control\"\n            id=\"description\"\n            v-model=\"description\"\n          ></textarea>\n        </div>\n        <div class=\"form-group\">\n          <b-button variant=\"succes\" type=\"submit\">Add Task</b-button>\n        </div>\n      </form>\n    </div>\n    <div class=\"task_content\">\n      <div v-for=\"stage in stages\" :key=\"stage\">\n      <div  class=\"tasks_list\">\n        <div v-for=\"task in tasks\" :key=\"task.id\">\n          <div v-if=\"task.stage == stage\" v-bind:class=\"stage\">\n          <h2>{{ task.title }}</h2>\n          <p>{{ task.description }}</p>\n          <p v-if=\"task.timerState\" >Now:{{ localTimer }}</p>\n          <p >Total:{{ task.timer }}</p>\n          <button v-if=\"task.stage=='Doing'\" @click=\"toggleTimer(task)\">\n            {{ count?\"Stop\":\"Start\" }}\n          </button>\n          <button @click=\"toggleStage(task, 'ToDo')\">\n            To Do\n          </button>\n          <button @click=\"toggleStage(task, 'Doing')\">\n            Doing\n          </button>\n          <button @click=\"toggleStage(task,'Done')\">\n            Done\n          </button>\n          <button @click=\"deleteTask(task)\">Delete</button>\n          </div>\n        </div>\n      </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      stages: [\"ToDo\", \"Doing\", \"Done\"],\n      tasks: [\"\"],\n      title: \"\",\n      description: \"\",\n      stage: \"ToDo\",\n      localTimer: 0,\n      count: false\n    };\n  },\nmounted () {\n    setInterval(() => {\n      if(this.count){\n      this.localTimer += 1;}\n    }, 1000)\n  },\n  methods: {\n    async getData() {\n      try {\n        const response = await axios.get(\n          `http://${location.hostname}:8000/api/taskss/?format=json`\n        );\n        this.tasks = response.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async toggleTimer(task){\n      try{\n        this.count=!this.count;\n          const response = await axios.put(\n          `http://${location.hostname}:8000/api/taskss/${task.id}/?format=json`,\n          {\n            stage: task.stageToggle,\n            title: task.title,\n            description: task.description,\n            timer: task.timer+this.localTimer,\n            timerState: !task.timerState\n\n          });\n          this.localTimer = 0;\n          let taskIndex = this.tasks.findIndex((t) => t.id === task.id);\n\n        this.tasks = this.tasks.map((task) => {\n          if (this.tasks.findIndex((t) => t.id === task.id) === taskIndex) {\n            return response.data;\n          }\n          return task;\n          \n        });\n        }\n        catch (error) {\n        console.log(error);\n    }},\n    async toggleStage(task, stageToggle) {\n      try {\n        const response = await axios.put(\n          `http://${location.hostname}:8000/api/taskss/${task.id}/?format=json`,\n          {\n            stage: stageToggle,\n            title: task.title,\n            description: task.description\n          }\n        );\n\n        let taskIndex = this.tasks.findIndex((t) => t.id === task.id);\n\n        this.tasks = this.tasks.map((task) => {\n          if (this.tasks.findIndex((t) => t.id === task.id) === taskIndex) {\n            return response.data;\n          }\n          return task;\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\tasync submitForm(){\n\t\ttry{\n\t\t\tconst response = await axios.post(\n\t\t\t`http://${location.hostname}:8000/api/taskss/?format=json`,\n\t\t\t{\n\t\t\t\ttitle: this.title,\n\t\t\t\tdescription: this.description,\n\t\t\t\tstage: this.stage\n\t\t\t}\n\t\t\t);\n\t\t\tthis.tasks.push(response.data);\n\t\t\tthis.title = '';\n\t\t\tthis.description  = '';\n\t\t}\n\t\tcatch(error){\n\t\t\tconsole.log(error);\n\t\t}\n\t}, async deleteTask(task){\n    let confirmation = confirm(\"Are you sure?\");\n    if(confirmation){\n\t\t\ttry{\n\t\t\t\tawait axios.delete(`http://${location.hostname}:8000/api/taskss/${task.id}/?format=json`);\n\t\t\t\tthis.getData();\n\t\t\t}\n\t\t\tcatch(error){\n\t\t\t\tconsole.log(error);\n\t\t\t}\n    }\n\t}\n  },\n  beforeMount () {\n   document.querySelector('body').setAttribute('style', 'background-image:url(\"tourqoise.jpeg\")')\n  },\n  beforeUnmout () {\n    document.querySelector('body').setAttribute('style', '')\n  },\n  created() {\n    this.getData();\n  },\n};\n</script>\n\n<style scoped>\nform{\n  \n  position: relative;\n  left: 50%;\n  transform: translate(-50%);\n  margin-bottom: 10px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  /* background-color: rgba(255, 255, 255, 0.493); */\n  width: 500px;\n  border-radius: 15px;\n\n}\n.title{\n  position: absolute;\n  top: 0px;\n}\n.task_content{\n  position: absolute;\n  display: flex;\n  left: 50%;\n  transform: translate(-50%);\n}\n.tasks_list > div > div{\n  position: relative;\n  list-style: none;\n  width: 250px;\n  height: 200px;\n  border-radius: 25px;\n  padding: 10px;\n  padding-bottom: 20px;\n background-color: rgba(116, 255, 243, 0.623); \n  margin-left: 20px;\n}\n\n@media(max-width : 520px){\n  .task_content{\n  position: absolute;\n  display: flex;\n  left: 100%;\n  transform: translate(-50%);\n}\n}\n\n</style>"]},"metadata":{},"sourceType":"module"}