{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      tasks: [\"\"],\n      title: \"\",\n      description: \"\"\n    };\n  },\n\n  methods: {\n    async getData() {\n      try {\n        const response = await axios.get(\"http://localhost:8000/api/taskss/?format=json\");\n        this.tasks = response.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async toggleTask(task) {\n      try {\n        const response = await axios.put(`http://localhost:8000/api/taskss/${task.id}/?format=json`, {\n          completed: !task.completed,\n          title: task.title,\n          description: task.description\n        });\n        let taskIndex = this.tasks.findIndex(t => t.id === task.id);\n        this.tasks = this.tasks.map(task => {\n          if (this.tasks.findIndex(t => t.id === task.id) === taskIndex) {\n            return response.data;\n          }\n\n          return task;\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async submitForm() {\n      try {\n        const response = await axios.post('http://localhost:8000/api/taskss/?format=json', {\n          title: this.title,\n          description: this.description,\n          completed: false\n        });\n        this.tasks.push(response.data);\n        this.title = '';\n        this.description = '';\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async deleteTask(task) {\n      let confirmation = confirm(\"you sure?\");\n\n      if (confirmation) {\n        try {\n          await axios.delete(`http://localhost:8000/api/taskss/${task.id}/?format=json`);\n          this.getData();\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n\n  },\n\n  created() {\n    this.getData();\n  }\n\n};","map":{"version":3,"mappings":"AAsCA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;AACbC,MAAI,GAAG;AACL,WAAO;AACLC,WAAK,EAAE,CAAC,EAAD,CADF;AAELC,WAAK,EAAE,EAFF;AAGLC,iBAAW,EAAE;AAHR,KAAP;AAKD,GAPY;;AASbC,SAAO,EAAE;AACP,UAAMC,OAAN,GAAgB;AACd,UAAI;AACF,cAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,GAAN,CACrB,+CADqB,CAAvB;AAGA,aAAKN,KAAL,GAAaK,QAAQ,CAACN,IAAtB;AACF,OALA,CAKE,OAAOQ,KAAP,EAAc;AACdC,eAAO,CAACC,GAAR,CAAYF,KAAZ;AACF;AACD,KAVM;;AAYP,UAAMG,UAAN,CAAiBC,IAAjB,EAAuB;AACrB,UAAI;AACF,cAAMN,QAAO,GAAI,MAAMP,KAAK,CAACc,GAAN,CACpB,oCAAmCD,IAAI,CAACE,EAAG,eADvB,EAErB;AACEC,mBAAS,EAAE,CAACH,IAAI,CAACG,SADnB;AAEEb,eAAK,EAAEU,IAAI,CAACV,KAFd;AAGEC,qBAAW,EAAES,IAAI,CAACT;AAHpB,SAFqB,CAAvB;AASA,YAAIa,SAAQ,GAAI,KAAKf,KAAL,CAAWgB,SAAX,CAAsBC,CAAD,IAAOA,CAAC,CAACJ,EAAF,KAASF,IAAI,CAACE,EAA1C,CAAhB;AAEA,aAAKb,KAAL,GAAa,KAAKA,KAAL,CAAWkB,GAAX,CAAgBP,IAAD,IAAU;AACpC,cAAI,KAAKX,KAAL,CAAWgB,SAAX,CAAsBC,CAAD,IAAOA,CAAC,CAACJ,EAAF,KAASF,IAAI,CAACE,EAA1C,MAAkDE,SAAtD,EAAiE;AAC/D,mBAAOV,QAAQ,CAACN,IAAhB;AACF;;AACA,iBAAOY,IAAP;AACD,SALY,CAAb;AAMF,OAlBA,CAkBE,OAAOJ,KAAP,EAAc;AACdC,eAAO,CAACC,GAAR,CAAYF,KAAZ;AACF;AACD,KAlCM;;AAmCV,UAAMY,UAAN,GAAkB;AACjB,UAAG;AACF,cAAMd,QAAO,GAAI,MAAMP,KAAK,CAACsB,IAAN,CACvB,+CADuB,EAEvB;AACCnB,eAAK,EAAE,KAAKA,KADb;AAECC,qBAAW,EAAE,KAAKA,WAFnB;AAGCY,mBAAS,EAAE;AAHZ,SAFuB,CAAvB;AAQA,aAAKd,KAAL,CAAWqB,IAAX,CAAgBhB,QAAQ,CAACN,IAAzB;AACA,aAAKE,KAAL,GAAa,EAAb;AACA,aAAKC,WAAL,GAAoB,EAApB;AACD,OAZA,CAaA,OAAMK,KAAN,EAAY;AACXC,eAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACA,KApDS;;AAoDP,UAAMe,UAAN,CAAiBX,IAAjB,EAAsB;AACxB,UAAIY,YAAW,GAAIC,OAAO,CAAC,WAAD,CAA1B;;AACA,UAAGD,YAAH,EAAgB;AACf,YAAG;AACF,gBAAMzB,KAAK,CAAC2B,MAAN,CAAc,oCAAmCd,IAAI,CAACE,EAAG,eAAzD,CAAN;AACA,eAAKT,OAAL;AACD,SAHA,CAIA,OAAMG,KAAN,EAAY;AACXC,iBAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACD;AACD;;AA/DU,GATI;;AA2EbmB,SAAO,GAAG;AACR,SAAKtB,OAAL;AACD;;AA7EY,CAAf","names":["axios","data","tasks","title","description","methods","getData","response","get","error","console","log","toggleTask","task","put","id","completed","taskIndex","findIndex","t","map","submitForm","post","push","deleteTask","confirmation","confirm","delete","created"],"sourceRoot":"","sources":["/home/andrei/djangoWorkspace/APITest/client/django_task_client/src/components/MyTasks.vue"],"sourcesContent":["<template>\n  <div class=\"task_container\">\n    <div class=\"add_task\">\n      <form v-on:submit.prevent=\"submitForm\">\n        <div class=\"form-group\">\n          <label for=\"title\">Title</label>\n          <input type=\"text\" class=\"form-control\" id=\"title\" v-model=\"title\" />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"description\">Description</label>\n          <textarea\n            class=\"form-control\"\n            id=\"description\"\n            v-model=\"description\"\n          ></textarea>\n        </div>\n        <div class=\"form-group\">\n          <button type=\"submit\">Add Task</button>\n        </div>\n      </form>\n    </div>\n    <div class=\"task_content\">\n      <h1>Tasks</h1>\n      <ul class=\"tasks_list\">\n        <li v-for=\"task in tasks\" :key=\"task.id\">\n          <h2>{{ task.title }}</h2>\n          <p>{{ task.description }}</p>\n          <button @click=\"toggleTask(task)\">\n            {{ task.completed ? \"Undo\" : \"Complete\" }}\n          </button>\n          <button @click=\"deleteTask(task)\">Delete</button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      tasks: [\"\"],\n      title: \"\",\n      description: \"\",\n    };\n  },\n\n  methods: {\n    async getData() {\n      try {\n        const response = await axios.get(\n          \"http://localhost:8000/api/taskss/?format=json\"\n        );\n        this.tasks = response.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async toggleTask(task) {\n      try {\n        const response = await axios.put(\n          `http://localhost:8000/api/taskss/${task.id}/?format=json`,\n          {\n            completed: !task.completed,\n            title: task.title,\n            description: task.description,\n          }\n        );\n\n        let taskIndex = this.tasks.findIndex((t) => t.id === task.id);\n\n        this.tasks = this.tasks.map((task) => {\n          if (this.tasks.findIndex((t) => t.id === task.id) === taskIndex) {\n            return response.data;\n          }\n          return task;\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\tasync submitForm(){\n\t\ttry{\n\t\t\tconst response = await axios.post(\n\t\t\t'http://localhost:8000/api/taskss/?format=json',\n\t\t\t{\n\t\t\t\ttitle: this.title,\n\t\t\t\tdescription: this.description,\n\t\t\t\tcompleted: false\n\t\t\t}\n\t\t\t);\n\t\t\tthis.tasks.push(response.data);\n\t\t\tthis.title = '';\n\t\t\tthis.description  = '';\n\t\t}\n\t\tcatch(error){\n\t\t\tconsole.log(error);\n\t\t}\n\t}, async deleteTask(task){\n\t\tlet confirmation = confirm(\"you sure?\");\n\t\tif(confirmation){\n\t\t\ttry{\n\t\t\t\tawait axios.delete(`http://localhost:8000/api/taskss/${task.id}/?format=json`);\n\t\t\t\tthis.getData();\n\t\t\t}\n\t\t\tcatch(error){\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t}\n\t}\n  },\n\n  created() {\n    this.getData();\n  },\n};\n</script>\n\n<style scoped>\n\t.task_content{\n\t\tbackground-color: rgb(177, 177, 177);\n\t\tposition:absolute;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\ttop: 0;\n\t\tright: 0;\n\t\twidth: 20%;\n\t\theight: 100%;\n\n\t}\n\tli{\n\t\tlist-style-type: none;\n\n\t}\n</style>"]},"metadata":{},"sourceType":"module"}