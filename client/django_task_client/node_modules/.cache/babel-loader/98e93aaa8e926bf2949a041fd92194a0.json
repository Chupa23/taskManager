{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-158c2b7c\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"task_container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"min_width\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"add_task\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\"\n}, \"Title\", -1\n/* HOISTED */\n));\n\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"description\"\n}, \"Description\", -1\n/* HOISTED */\n));\n\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"form-group\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Add Task\")], -1\n/* HOISTED */\n));\n\nconst _hoisted_9 = {\n  class: \"task_content\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Tasks\", -1\n/* HOISTED */\n));\n\nconst _hoisted_11 = {\n  class: \"tasks_list\"\n};\nconst _hoisted_12 = {\n  key: 0\n};\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = [\"onClick\"];\nconst _hoisted_15 = [\"onClick\"];\nconst _hoisted_16 = [\"onClick\"];\nconst _hoisted_17 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.title = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.title]])]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"textarea\", {\n    class: \"form-control\",\n    id: \"description\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.description = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.description]])]), _hoisted_8], 32\n  /* HYDRATE_EVENTS */\n  )]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.stages, stage => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: stage\n    }, [_createElementVNode(\"div\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, task => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: task.id\n      }, [task.stage == stage ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: _normalizeClass(stage)\n      }, [_createElementVNode(\"h2\", null, _toDisplayString(task.title), 1\n      /* TEXT */\n      ), _createElementVNode(\"p\", null, _toDisplayString(task.description), 1\n      /* TEXT */\n      ), task.timerState ? (_openBlock(), _createElementBlock(\"p\", _hoisted_12, \"Now:\" + _toDisplayString($data.localTimer), 1\n      /* TEXT */\n      )) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", null, \"Total:\" + _toDisplayString(task.timer), 1\n      /* TEXT */\n      ), task.stage == 'Doing' ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 1,\n        onClick: $event => $options.toggleTimer(task)\n      }, _toDisplayString($data.count ? \"Stop\" : \"Start\"), 9\n      /* TEXT, PROPS */\n      , _hoisted_13)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n        onClick: $event => $options.toggleStage(task, 'ToDo')\n      }, \" To Do \", 8\n      /* PROPS */\n      , _hoisted_14), _createElementVNode(\"button\", {\n        onClick: $event => $options.toggleStage(task, 'Doing')\n      }, \" Doing \", 8\n      /* PROPS */\n      , _hoisted_15), _createElementVNode(\"button\", {\n        onClick: $event => $options.toggleStage(task, 'Done')\n      }, \" Done \", 8\n      /* PROPS */\n      , _hoisted_16), _createElementVNode(\"button\", {\n        onClick: $event => $options.deleteTask(task)\n      }, \"Delete\", 8\n      /* PROPS */\n      , _hoisted_17)], 2\n      /* CLASS */\n      )) : _createCommentVNode(\"v-if\", true)]);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","for","type","_createElementBlock","_hoisted_2","onSubmit","$options","_hoisted_5","id","$data","$event","_hoisted_7","_hoisted_8","_hoisted_10","_Fragment","_renderList","stage","key","task","_toDisplayString","title","description","timerState","_hoisted_12","timer","onClick","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17"],"sourceRoot":"","sources":["/home/andrei/djangoWorkspace/APITest/client/django_task_client/src/components/MyTasks.vue"],"sourcesContent":["<template>\n  <div class=\"task_container\">\n    <div class=\"min_width\"></div>\n    <div class=\"add_task\">\n      <form v-on:submit.prevent=\"submitForm\">\n        <div class=\"form-group\">\n          <label for=\"title\">Title</label>\n          <input type=\"text\" class=\"form-control\" id=\"title\" v-model=\"title\" />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"description\">Description</label>\n          <textarea\n            class=\"form-control\"\n            id=\"description\"\n            v-model=\"description\"\n          ></textarea>\n        </div>\n        <div class=\"form-group\">\n          <button type=\"submit\">Add Task</button>\n        </div>\n      </form>\n    </div>\n    <div class=\"task_content\">\n      <h1>Tasks</h1>\n      <div v-for=\"stage in stages\" :key=\"stage\">\n      <div  class=\"tasks_list\">\n        <div v-for=\"task in tasks\" :key=\"task.id\">\n          <div v-if=\"task.stage == stage\" v-bind:class=\"stage\">\n          <h2>{{ task.title }}</h2>\n          <p>{{ task.description }}</p>\n          <p v-if=\"task.timerState\" >Now:{{ localTimer }}</p>\n          <p >Total:{{ task.timer }}</p>\n          <button v-if=\"task.stage=='Doing'\" @click=\"toggleTimer(task)\">\n            {{ count?\"Stop\":\"Start\" }}\n          </button>\n          <button @click=\"toggleStage(task, 'ToDo')\">\n            To Do\n          </button>\n          <button @click=\"toggleStage(task, 'Doing')\">\n            Doing\n          </button>\n          <button @click=\"toggleStage(task,'Done')\">\n            Done\n          </button>\n          <button @click=\"deleteTask(task)\">Delete</button>\n          </div>\n        </div>\n      </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      stages: [\"ToDo\", \"Doing\", \"Done\"],\n      tasks: [\"\"],\n      title: \"\",\n      description: \"\",\n      stage: \"ToDo\",\n      localTimer: 0,\n      count: false\n    };\n  },\nmounted () {\n\n    setInterval(() => {\n      if(this.count){\n      this.localTimer += 1;}\n    }, 1000)\n  },\n  methods: {\n    async getData() {\n      try {\n        const response = await axios.get(\n          `http://${location.hostname}:8000/api/taskss/?format=json`\n        );\n        this.tasks = response.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async toggleTimer(task){\n      try{\n        this.count=!this.count;\n          const response = await axios.put(\n          `http://${location.hostname}:8000/api/taskss/${task.id}/?format=json`,\n          {\n            stage: task.stageToggle,\n            title: task.title,\n            description: task.description,\n            timer: task.timer+this.localTimer,\n            timerState: !task.timerState\n\n          });\n          this.localTimer = 0;\n          let taskIndex = this.tasks.findIndex((t) => t.id === task.id);\n\n        this.tasks = this.tasks.map((task) => {\n          if (this.tasks.findIndex((t) => t.id === task.id) === taskIndex) {\n            return response.data;\n          }\n          return task;\n          \n        });\n        }\n        catch (error) {\n        console.log(error);\n    }},\n    async toggleStage(task, stageToggle) {\n      try {\n        const response = await axios.put(\n          `http://${location.hostname}:8000/api/taskss/${task.id}/?format=json`,\n          {\n            stage: stageToggle,\n            title: task.title,\n            description: task.description\n          }\n        );\n\n        let taskIndex = this.tasks.findIndex((t) => t.id === task.id);\n\n        this.tasks = this.tasks.map((task) => {\n          if (this.tasks.findIndex((t) => t.id === task.id) === taskIndex) {\n            return response.data;\n          }\n          return task;\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\tasync submitForm(){\n\t\ttry{\n\t\t\tconst response = await axios.post(\n\t\t\t`http://${location.hostname}:8000/api/taskss/?format=json`,\n\t\t\t{\n\t\t\t\ttitle: this.title,\n\t\t\t\tdescription: this.description,\n\t\t\t\tstage: this.stage\n\t\t\t}\n\t\t\t);\n\t\t\tthis.tasks.push(response.data);\n\t\t\tthis.title = '';\n\t\t\tthis.description  = '';\n\t\t}\n\t\tcatch(error){\n\t\t\tconsole.log(error);\n\t\t}\n\t}, async deleteTask(task){\n    let confirmation = confirm(\"Are you sure?\");\n    if(confirmation){\n\t\t\ttry{\n\t\t\t\tawait axios.delete(`http://${location.hostname}:8000/api/taskss/${task.id}/?format=json`);\n\t\t\t\tthis.getData();\n\t\t\t}\n\t\t\tcatch(error){\n\t\t\t\tconsole.log(error);\n\t\t\t}\n    }\n\t}\n  },\n\n  created() {\n    this.getData();\n  },\n};\n</script>\n\n<style scoped>\n/* .tasks_list{\n  position:relative;\n  width: 250px;\n  vertical-align: top;\n  float: left;\n  left: 50%;\n  transform: translate(-150%);\n} */\n\n.tasks_list{\n  display: flex;\n  flex-direction: column;\n\n}\n.tasks_list > div > div{\n  z-index: 1;\n  display: block;\n  position: relative;\n  list-style: none;\n  top: 10%;\n  width: 250px;\n  height: 200px;\n  border-radius: 20px;\n  border:black solid 2px;\n  background-color: white;\n}\n\n@media(max-width : 320px){\n  .tasks_list{\n  position:relative;\n  width: 250px;\n  vertical-align: top;\n  float: left;\n  left: 50%;\n  transform: translate(-150%); \n}\n}\n.ToDo{\n\n}\n.Done{\n\n\n}\n.Doing{\n\n\n}\n\n.min_width{\n  width: 800px;\n  border: solid black 10px;\n}\n\n</style>"]},"metadata":{},"sourceType":"module"}