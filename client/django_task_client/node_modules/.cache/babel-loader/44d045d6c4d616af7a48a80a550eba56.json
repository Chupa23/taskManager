{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      tasks: [\"\"]\n    };\n  },\n\n  methods: {\n    async getData() {\n      try {\n        const response = await axios.get(\"http://localhost:8000/api/taskss/?format=json\");\n        this.tasks = response.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async toggleTask(task) {\n      try {\n        const response = await axios.put(`http://localhost:8000/api/taskss/${task.id}/?format=json`, {\n          completed: !task.completed,\n          title: task.title,\n          description: task.description\n        });\n        let taskIndex = this.tasks.findIndex(t => t.id === task.id);\n        this.tasks = this.tasks.map(task => {\n          if (this.tasks.findIndex(t => t.id === task.id) === taskIndex) {\n            return response.data;\n          }\n\n          return task;\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n  },\n\n  created() {\n    this.getData();\n  }\n\n};","map":{"version":3,"mappings":"AAsCA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;AACbC,MAAI,GAAG;AACL,WAAO;AACLC,WAAK,EAAE,CAAC,EAAD;AADF,KAAP;AAGD,GALY;;AAObC,SAAO,EAAE;AACP,UAAMC,OAAN,GAAgB;AACd,UAAI;AACF,cAAMC,QAAO,GAAI,MAAML,KAAK,CAACM,GAAN,CACrB,+CADqB,CAAvB;AAGA,aAAKJ,KAAL,GAAaG,QAAQ,CAACJ,IAAtB;AACF,OALA,CAKE,OAAOM,KAAP,EAAc;AACdC,eAAO,CAACC,GAAR,CAAYF,KAAZ;AACF;AACD,KAVM;;AAYP,UAAMG,UAAN,CAAiBC,IAAjB,EAAuB;AACrB,UAAI;AACF,cAAMN,QAAO,GAAI,MAAML,KAAK,CAACY,GAAN,CACpB,oCAAmCD,IAAI,CAACE,EAAG,eADvB,EAErB;AACEC,mBAAS,EAAE,CAACH,IAAI,CAACG,SADnB;AAEEC,eAAK,EAAEJ,IAAI,CAACI,KAFd;AAGEC,qBAAW,EAAEL,IAAI,CAACK;AAHpB,SAFqB,CAAvB;AASA,YAAIC,SAAQ,GAAI,KAAKf,KAAL,CAAWgB,SAAX,CAAsBC,CAAD,IAAOA,CAAC,CAACN,EAAF,KAASF,IAAI,CAACE,EAA1C,CAAhB;AAEA,aAAKX,KAAL,GAAa,KAAKA,KAAL,CAAWkB,GAAX,CAAgBT,IAAD,IAAU;AACpC,cAAI,KAAKT,KAAL,CAAWgB,SAAX,CAAsBC,CAAD,IAAOA,CAAC,CAACN,EAAF,KAASF,IAAI,CAACE,EAA1C,MAAkDI,SAAtD,EAAiE;AAC/D,mBAAOZ,QAAQ,CAACJ,IAAhB;AACF;;AACA,iBAAOU,IAAP;AACD,SALY,CAAb;AAMF,OAlBA,CAkBE,OAAOJ,KAAP,EAAc;AACdC,eAAO,CAACC,GAAR,CAAYF,KAAZ;AACF;AACD;;AAlCM,GAPI;;AA4Cbc,SAAO,GAAG;AACR,SAAKjB,OAAL;AACD;;AA9CY,CAAf","names":["axios","data","tasks","methods","getData","response","get","error","console","log","toggleTask","task","put","id","completed","title","description","taskIndex","findIndex","t","map","created"],"sourceRoot":"","sources":["/home/andrei/djangoWorkspace/APITest/client/django_task_client/src/components/MyTasks.vue"],"sourcesContent":["<template>\n  <div class=\"task_container\">\n    <div class=\"add_task\">\n      <form v-on:submit.prevent=\"submitForm\">\n        <div class=\"form-group\">\n          <label for=\"title\">Title</label>\n          <input type=\"text\" class=\"form-control\" id=\"title\" v-model=\"title\" />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"description\">Description</label>\n          <textarea\n            class=\"form-control\"\n            id=\"description\"\n            v-model=\"description\"\n          ></textarea>\n        </div>\n        <div class=\"form-group\">\n          <button type=\"submit\">Add Task</button>\n        </div>\n      </form>\n    </div>\n    <div class=\"task_content\">\n      <h1>Tasks</h1>\n      <ul class=\"tasks_list\">\n        <li v-for=\"task in tasks\" :key=\"task.id\">\n          <h2>{{ task.title }}</h2>\n          <p>{{ task.description }}</p>\n          <button @click=\"toggleTask(task)\">\n            {{ task.completed ? \"Undo\" : \"Complete\" }}\n          </button>\n          <button @click=\"deteleTask(task)\">Delete</button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      tasks: [\"\"],\n    };\n  },\n\n  methods: {\n    async getData() {\n      try {\n        const response = await axios.get(\n          \"http://localhost:8000/api/taskss/?format=json\"\n        );\n        this.tasks = response.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async toggleTask(task) {\n      try {\n        const response = await axios.put(\n          `http://localhost:8000/api/taskss/${task.id}/?format=json`,\n          {\n            completed: !task.completed,\n            title: task.title,\n            description: task.description,\n          }\n        );\n\n        let taskIndex = this.tasks.findIndex((t) => t.id === task.id);\n\n        this.tasks = this.tasks.map((task) => {\n          if (this.tasks.findIndex((t) => t.id === task.id) === taskIndex) {\n            return response.data;\n          }\n          return task;\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n\n  created() {\n    this.getData();\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}