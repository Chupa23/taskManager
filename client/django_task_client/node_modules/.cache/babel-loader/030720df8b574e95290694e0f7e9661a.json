{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Transition as _Transition, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-158c2b7c\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"task_container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"add_task\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\"\n}, \"Title\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"description\"\n}, \"Description\", -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"Add Task\");\n\nconst _hoisted_9 = {\n  class: \"task_content\"\n};\nconst _hoisted_10 = {\n  class: \"tasks_list\"\n};\nconst _hoisted_11 = {\n  class: \"stage\"\n};\n\nconst _hoisted_12 = /*#__PURE__*/_createTextVNode(\" To Do \");\n\nconst _hoisted_13 = /*#__PURE__*/_createTextVNode(\" Doing \");\n\nconst _hoisted_14 = /*#__PURE__*/_createTextVNode(\" Done \");\n\nconst _hoisted_15 = /*#__PURE__*/_createTextVNode(\"Delete\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_button = _resolveComponent(\"b-button\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_b_button, {\n    pill: \"\",\n    variant: \"dark\",\n    onClick: _cache[0] || (_cache[0] = $event => this.addTask = !this.addTask),\n    class: \"addBtn\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($data.addTask ? \"Cancel\" : \"Add New Task\"), 1\n    /* TEXT */\n    )]),\n    _: 1\n    /* STABLE */\n\n  }), _createVNode(_Transition, {\n    \"enter-active-class\": \"animate__animated animate__zoomIn\",\n    \"leave-active-class\": \"animate__animated animate__zoomOut\"\n  }, {\n    default: _withCtx(() => [$data.addTask ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"form\", {\n      onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n    }, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"title\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.title = $event)\n    }, null, 512\n    /* NEED_PATCH */\n    ), [[_vModelText, $data.title]])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"textarea\", {\n      class: \"form-control\",\n      id: \"description\",\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.description = $event)\n    }, null, 512\n    /* NEED_PATCH */\n    ), [[_vModelText, $data.description]])]), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_b_button, {\n      pill: \"\",\n      variant: \"outline-light\",\n      class: \"createBtn\",\n      type: \"submit\"\n    }, {\n      default: _withCtx(() => [_hoisted_8]),\n      _: 1\n      /* STABLE */\n\n    })])], 32\n    /* HYDRATE_EVENTS */\n    )])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1\n    /* STABLE */\n\n  }), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.stages, stage => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: stage\n    }, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"p\", _hoisted_11, _toDisplayString(stage), 1\n    /* TEXT */\n    ), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, task => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: task.id\n      }, [task.stage == stage ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: _normalizeClass(stage)\n      }, [_createElementVNode(\"h2\", null, _toDisplayString(task.title), 1\n      /* TEXT */\n      ), _createElementVNode(\"p\", null, _toDisplayString(task.description), 1\n      /* TEXT */\n      ), _createElementVNode(\"p\", null, \"Total:\" + _toDisplayString($options.convertTime(task.timer)), 1\n      /* TEXT */\n      ), task.stage == 'Doing' ? (_openBlock(), _createBlock(_component_b_button, {\n        key: 0,\n        pill: \"\",\n        variant: \"info\",\n        onClick: $event => $options.toggleTimer(task, 0, true)\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(task.timerState ? \"Stop\" : \"Start\"), 1\n        /* TEXT */\n        )]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"onClick\"])) : _createCommentVNode(\"v-if\", true), task.stage != 'ToDo' ? (_openBlock(), _createBlock(_component_b_button, {\n        key: 1,\n        pill: \"\",\n        variant: \"outline-danger\",\n        onClick: $event => $options.toggleStage(task, 'ToDo')\n      }, {\n        default: _withCtx(() => [_hoisted_12]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"onClick\"])) : _createCommentVNode(\"v-if\", true), task.stage != 'Doing' ? (_openBlock(), _createBlock(_component_b_button, {\n        key: 2,\n        pill: \"\",\n        variant: \"outline-warning\",\n        onClick: $event => $options.toggleStage(task, 'Doing')\n      }, {\n        default: _withCtx(() => [_hoisted_13]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"onClick\"])) : _createCommentVNode(\"v-if\", true), task.stage != 'Done' ? (_openBlock(), _createBlock(_component_b_button, {\n        key: 3,\n        pill: \"\",\n        variant: \"outline-success\",\n        onClick: $event => $options.toggleStage(task, 'Done')\n      }, {\n        default: _withCtx(() => [_hoisted_14]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_b_button, {\n        pill: \"\",\n        variant: \"dark\",\n        onClick: $event => $options.deleteTask(task)\n      }, {\n        default: _withCtx(() => [_hoisted_15]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"onClick\"])], 2\n      /* CLASS */\n      )) : _createCommentVNode(\"v-if\", true)]);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","for","_createElementBlock","_createVNode","_component_b_button","pill","variant","onClick","addTask","$data","_Transition","onSubmit","$options","_hoisted_4","type","id","$event","_hoisted_6","_Fragment","_renderList","stage","key","_toDisplayString","task","title","description","timer","_createBlock","timerState"],"sourceRoot":"","sources":["/home/andrei/djangoWorkspace/APITest/client/django_task_client/src/components/MyTasks.vue"],"sourcesContent":["<template>\n  <div class=\"task_container\">\n    <b-button pill variant=\"dark\" @click=\"this.addTask=!this.addTask\" class=\"addBtn\"> {{addTask ? \"Cancel\":\"Add New Task\"}}</b-button>\n    <transition\n    enter-active-class=\"animate__animated animate__zoomIn\"\n   leave-active-class=\"animate__animated animate__zoomOut\"\n    >\n    <div v-if=\"addTask\" class=\"add_task\">\n      <form v-on:submit.prevent=\"submitForm\">\n        <div class=\"form-group\">\n          <label for=\"title\" >Title</label>\n          <input type=\"text\" class=\"form-control\" id=\"title\" v-model=\"title\" />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"description\">Description</label>\n          <textarea\n            class=\"form-control\"\n            id=\"description\"\n            v-model=\"description\"\n          ></textarea>\n        </div>\n        <div class=\"form-group\">\n          <b-button pill variant=\"outline-light\" class=\"createBtn\" type=\"submit\">Add Task</b-button>\n        </div>\n      </form>\n    </div>\n    </transition>\n    <div class=\"task_content\">\n      <div v-for=\"stage in stages\" :key=\"stage\">\n      <div  class=\"tasks_list\">\n        <p class=\"stage\">{{stage}}</p>\n        <div v-for=\"task in tasks\" :key=\"task.id\">\n          <div v-if=\"task.stage == stage\" v-bind:class=\"stage\">\n          <h2>{{ task.title }}</h2>\n          <p>{{ task.description }}</p>\n          <p >Total:{{ convertTime(task.timer) }}</p>\n          <b-button pill variant=\"info\" v-if=\"task.stage=='Doing'\" @click=\"toggleTimer(task, 0,true)\">\n            {{ task.timerState?\"Stop\":\"Start\" }}\n          </b-button>\n          <b-button v-if=\"task.stage!='ToDo'\" pill variant=\"outline-danger\" @click=\"toggleStage(task, 'ToDo')\">\n            To Do\n          </b-button>\n          <b-button v-if=\"task.stage!='Doing'\" pill variant=\"outline-warning\" @click=\"toggleStage(task, 'Doing')\">\n            Doing\n          </b-button>\n          <b-button v-if=\"task.stage!='Done'\" pill variant=\"outline-success\" @click=\"toggleStage(task,'Done')\">\n            Done\n          </b-button>\n          <b-button pill variant=\"dark\" @click=\"deleteTask(task)\">Delete</b-button>\n          </div>\n        </div>\n      </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      stages: [\"ToDo\", \"Doing\", \"Done\"],\n      tasks: [\"\"],\n      title: \"\",\n      description: \"\",\n      stage: \"ToDo\",\n      localTimer: 0,\n      count: false,\n      addTask: false\n    };\n  },\nmounted () {\n    setInterval(() => {\n      this.getData();\n      this.localTimer += 1;\n        for(let task in this.tasks){\n          if(this.tasks[task].timerState){\n            this.toggleTimer(this.tasks[task],1,false);\n          }\n        \n      }\n    }, 1000)\n  },\n  methods: {\n\n     convertTime(seconds){\n      try{\n        let time = new Date(seconds * 1000).toISOString().substr(11, 8);\n        return time;\n      }\n      catch(error) {\n        console.log(error);\n      }\n    },\n\n    async getData() {\n      try {\n        const datetime = new Date();\n        let date = datetime.getFullYear()+\"-\"+(datetime.getMonth()+1)+\"-\"+datetime.getDate();\n        const response = await axios.get(\n          `http://${location.hostname}:8000/api/taskss/?format=json&created_at=${date}`\n        );\n        this.tasks = response.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async toggleTimer(task, x, toggle){\n      try{\n        this.count=!this.count;\n        this.switch = task.timerState;\n        if(toggle){\n          this.switch=!this.switch;\n        }\n          const response = await axios.put(\n          `http://${location.hostname}:8000/api/taskss/${task.id}/?format=json`,\n          {\n            stage: task.stageToggle,\n            title: task.title,\n            description: task.description,\n            timer: task.timer+x,\n            timerState: this.switch,\n\n          });\n          this.localTimer = 0;\n          let taskIndex = this.tasks.findIndex((t) => t.id === task.id);\n\n        this.tasks = this.tasks.map((task) => {\n          if (this.tasks.findIndex((t) => t.id === task.id) === taskIndex) {\n            return response.data;\n          }\n          return task;\n          \n        });\n        }\n        catch (error) {\n        console.log(error);\n    }},\n    async toggleStage(task, stageToggle) {\n      try {\n        const response = await axios.put(\n          `http://${location.hostname}:8000/api/taskss/${task.id}/?format=json`,\n          {\n            stage: stageToggle,\n            title: task.title,\n            description: task.description\n          }\n        );\n\n        let taskIndex = this.tasks.findIndex((t) => t.id === task.id);\n\n        this.tasks = this.tasks.map((task) => {\n          if (this.tasks.findIndex((t) => t.id === task.id) === taskIndex) {\n            return response.data;\n          }\n          return task;\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\tasync submitForm(){\n\t\ttry{\n\t\t\tconst response = await axios.post(\n\t\t\t`http://${location.hostname}:8000/api/taskss/?format=json`,\n\t\t\t{\n\t\t\t\ttitle: this.title,\n\t\t\t\tdescription: this.description,\n\t\t\t\tstage: this.stage\n\t\t\t}\n\t\t\t);\n\t\t\tthis.tasks.push(response.data);\n\t\t\tthis.title = '';\n\t\t\tthis.description  = '';\n\t\t}\n\t\tcatch(error){\n\t\t\tconsole.log(error);\n\t\t}\n\t}, async deleteTask(task){\n    let confirmation = confirm(\"Are you sure?\");\n    if(confirmation){\n\t\t\ttry{\n\t\t\t\tawait axios.delete(`http://${location.hostname}:8000/api/taskss/${task.id}/?format=json`);\n\t\t\t\tthis.getData();\n\t\t\t}\n\t\t\tcatch(error){\n\t\t\t\tconsole.log(error);\n\t\t\t}\n    }\n\t}\n  },\n  beforeMount () {\n   document.querySelector('body').setAttribute('style', 'background-image:url(\"tourqoise.jpeg\")')\n  },\n  beforeUnmout () {\n    document.querySelector('body').setAttribute('style', '')\n  },\n  created() {\n    this.getData();\n  },\n};\n</script>\n\n<style scoped>\n\n.stage{\n\n  position: relative;\n  color: White;\n  font-weight: bold;\n  margin-bottom: 20px;\n  margin-top: 5px;\n}\n\nbutton{\n  margin: 5px;\n}\n\n.createBtn{\nmargin:15px\n}\nform{\n  z-index: 2;\n  position: absolute;\n  left: 50%;\n  transform: translate(-50%);\n  margin-bottom: 10px;\n  padding-top: 20px;\n  padding-bottom: 0px;\n  background-color: rgba(44, 44, 44, 0.856);\n  width: 500px;\n  border-radius: 15px;\n  color: white;\n\n}\n.title{\n  position: absolute;\n  top: 0px;\n}\n.task_content{\n  position: absolute;\n  display: flex;\n  flex-wrap: column;\n  left: 50%;\n  margin-top: 30px;\n  transform: translate(-50%);\n}\n\n.tasks_list {\n  background-color: rgba(0, 0, 0, 0.199);\n  padding: 5px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-right: 25px;\n  min-width: 200px;\n  margin: 5px;\n  border-radius: 40px;\n  border: 1px solid rgba(116, 255, 243, 0.623);\n  padding-top:5px;\n}\n.tasks_list > div > div{\n  z-index: 0;\n  position: relative;\n  list-style: none;\n  min-width: 250px;\n  max-width: 450px;\n  /* height: 200px; */\n  border-radius: 25px;\n  padding: 10px;\n  padding-bottom: 20px;\n background-color: rgba(116, 255, 243, 0.623); \n  margin-left: 20px;\n}\n\n@media(max-width : 520px){\n  .task_content{\n  position: absolute;\n  display: flex;\n  left: 100%;\n  transform: translate(-50%);\n}\n\n  .addBtn{\n    position:fixed;\n    left:125px;\n    top:30px;\n  }\n}\n\n</style>"]},"metadata":{},"sourceType":"module"}